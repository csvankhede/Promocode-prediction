# Qualitychecker properties
qualitychecker.task.policies=org.apache.gobblin.policies.count.RowCountPolicy,org.apache.gobblin.policies.schema.SchemaCompatibilityPolicy
qualitychecker.task.policy.types=OPTIONAL,OPTIONAL

# Publisher properties
data.publisher.type=org.apache.gobblin.publisher.BaseDataPublisher

# Writer properties
writer.destination.type=HDFS
writer.output.format=AVRO

fs.uri=file:///
writer.fs.uri=s3a://einstein-data-lake/product/final
state.store.fs.uri=s3a://einstein-data-lake/product/state
data.publisher.fs.uri=s3a://einstein-data-lake/product

#fs.s3.awsAccessKeyId=
#fs.s3.awsSecretAccessKey=

fs.s3a.access.key=
fs.s3a.secret.key=
fs.s3a.buffer.dir=/home/csvankhede/movie_lense/workspace/tmp
fs.s3a.endpoint=s3.ap-south-1.amazonaws.com
fs.s3a.path.style.access=true

data.publisher.metadata.output.dir=s3a://einstein-data-lake/movielense/metadata_out

task.data.root.dir=s3a://einstein-data-lake/product/workspace/task-staging
writer.output.dir=s3a://einstein-data-lake/product/task-output
writer.builder.class=org.apache.gobblin.writer.AvroDataWriterBuilder
state.store.dir=/product/state-store
data.publisher.final.dir=s3a://einstein-data-lake/product/job-output

mr.job.max.mappers=1
mr.job.root.dir=/product/working
metrics.reporting.file.enabled=true
metrics.log.dir=/product/metrics
metrics.reporting.file.suffix=txt
